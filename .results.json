{"version":"3.3.2","examples":[{"description":"is initialized with a name","full_description":"Artist #new is initialized with a name","status":"passed","file_path":"./spec/artist_spec.rb","line_number":9,"run_time":0.001596087,"pending_message":null},{"description":"has an attr_accessor for name","full_description":"Artist #name has an attr_accessor for name","status":"passed","file_path":"./spec/artist_spec.rb","line_number":15,"run_time":0.000841262,"pending_message":null},{"description":"selects the songs from the Song class which have `self` as the artist","full_description":"Artist #songs selects the songs from the Song class which have `self` as the artist","status":"passed","file_path":"./spec/artist_spec.rb","line_number":21,"run_time":0.001831417,"pending_message":null},{"description":"does not select the songs which don't 'belong' to itself","full_description":"Artist #songs does not select the songs which don't 'belong' to itself","status":"passed","file_path":"./spec/artist_spec.rb","line_number":26,"run_time":0.000159837,"pending_message":null},{"description":"takes in an argument of a song name, creates a new song with it and associates the song and artist","full_description":"Artist #add_song_by_name takes in an argument of a song name, creates a new song with it and associates the song and artist","status":"passed","file_path":"./spec/artist_spec.rb","line_number":35,"run_time":0.000143066,"pending_message":null},{"description":"is initialized with a name","full_description":"Author #new is initialized with a name","status":"passed","file_path":"./spec/author_spec.rb","line_number":9,"run_time":0.000144623,"pending_message":null},{"description":"has an attr_accessor for name","full_description":"Author #name has an attr_accessor for name","status":"passed","file_path":"./spec/author_spec.rb","line_number":15,"run_time":8.1726e-05,"pending_message":null},{"description":"selects the posts from the Post class which have `self` as the author","full_description":"Author #posts selects the posts from the Post class which have `self` as the author","status":"passed","file_path":"./spec/author_spec.rb","line_number":21,"run_time":0.000105921,"pending_message":null},{"description":"does not select the posts which don't 'belong' to itself","full_description":"Author #posts does not select the posts which don't 'belong' to itself","status":"passed","file_path":"./spec/author_spec.rb","line_number":26,"run_time":0.000120184,"pending_message":null},{"description":"takes in an argument of a post title, creates a new post with it and associates the post and author","full_description":"Author #add_post_by_title takes in an argument of a post title, creates a new post with it and associates the post and author","status":"passed","file_path":"./spec/author_spec.rb","line_number":36,"run_time":0.000112452,"pending_message":null},{"description":"is has a class variable @@all","full_description":"Post Post is has a class variable @@all","status":"passed","file_path":"./spec/post_spec.rb","line_number":9,"run_time":9.4914e-05,"pending_message":null},{"description":"returns the @@all array","full_description":"Post Post .all returns the @@all array","status":"passed","file_path":"./spec/post_spec.rb","line_number":14,"run_time":0.000890503,"pending_message":null},{"description":"is initialized with an argument of a title and an optional author object","full_description":"Post #new is initialized with an argument of a title and an optional author object","status":"passed","file_path":"./spec/post_spec.rb","line_number":24,"run_time":0.000146563,"pending_message":null},{"description":"adds self to the @@all array","full_description":"Post #new adds self to the @@all array","status":"passed","file_path":"./spec/post_spec.rb","line_number":29,"run_time":0.000109467,"pending_message":null},{"description":"has a title","full_description":"Post #title has a title","status":"passed","file_path":"./spec/post_spec.rb","line_number":35,"run_time":9.9396e-05,"pending_message":null},{"description":"belongs to an author","full_description":"Post #author belongs to an author","status":"passed","file_path":"./spec/post_spec.rb","line_number":41,"run_time":0.00011655,"pending_message":null},{"description":"knows the name of it's author","full_description":"Post #author_name knows the name of it's author","status":"passed","file_path":"./spec/post_spec.rb","line_number":47,"run_time":0.000101137,"pending_message":null},{"description":"returns nil if the post does not have an author","full_description":"Post #author_name returns nil if the post does not have an author","status":"passed","file_path":"./spec/post_spec.rb","line_number":51,"run_time":8.5261e-05,"pending_message":null},{"description":"is has a class variable @@all","full_description":"Song Song is has a class variable @@all","status":"passed","file_path":"./spec/song_spec.rb","line_number":10,"run_time":0.000144597,"pending_message":null},{"description":"returns the @@all array","full_description":"Song Song .all returns the @@all array","status":"passed","file_path":"./spec/song_spec.rb","line_number":15,"run_time":9.7138e-05,"pending_message":null},{"description":"is initialized with an argument of a name and an optional artist object","full_description":"Song #new is initialized with an argument of a name and an optional artist object","status":"passed","file_path":"./spec/song_spec.rb","line_number":25,"run_time":0.00012251,"pending_message":null},{"description":"adds self to the @@all array","full_description":"Song #new adds self to the @@all array","status":"passed","file_path":"./spec/song_spec.rb","line_number":30,"run_time":0.000100667,"pending_message":null},{"description":"has a name","full_description":"Song #name has a name","status":"passed","file_path":"./spec/song_spec.rb","line_number":37,"run_time":7.9475e-05,"pending_message":null},{"description":"belongs to an artist","full_description":"Song #artist belongs to an artist","status":"passed","file_path":"./spec/song_spec.rb","line_number":43,"run_time":8.6846e-05,"pending_message":null},{"description":"knows the name of it's artist","full_description":"Song #artist_name knows the name of it's artist","status":"passed","file_path":"./spec/song_spec.rb","line_number":49,"run_time":9.8617e-05,"pending_message":null},{"description":"returns nil if the song does not have an artist","full_description":"Song #artist_name returns nil if the song does not have an artist","status":"passed","file_path":"./spec/song_spec.rb","line_number":53,"run_time":8.6455e-05,"pending_message":null}],"summary":{"duration":0.012767725,"example_count":26,"failure_count":0,"pending_count":0},"summary_line":"26 examples, 0 failures"}